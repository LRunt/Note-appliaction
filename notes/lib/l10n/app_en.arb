{
    "appName": "Notes",
    "@appName": {
        "description": "The name of the application."
    },
    "welcome": "Welcome back!",
    "@welcome": {
        "description": "Greeting, when user open the app."
    },
    "registration": "Registration",
    "@registration": {
        "description": "Registration of the new user account."
    },
    "login": "Login",
    "@login": {
        "description": "Autentification of the user."
    },
    "username": "Username",
    "@username": {
        "description": "Username of the user."
    },
    "email": "Email",
    "@email": {
        "description": "Email of the user who wants to login or register"
    },
    "password": "Password",
    "@password": {
        "description": "Secret string that allows access to a computer system or service."
    },
    "passwordConfirm": "Confirm password",
    "@passwordConfirm": {
        "description": "Confirmation of the password to control if there is not any missclick."
    },
    "loginText": "Please Login",
    "@loginText": {
        "description": "Introductory text for login."
    },
    "doNotHaveAccount": "Don't have an acount?",
    "@doNotHaveAccount": {
        "description": "Asking the user if he do not have an account."  
    },
    "createAccount": "Create new here!",
    "@createAccount": {
        "description": "Text that redirects the user to the registration page."
    },
    "registrationText": "Let's create an acount",
    "@registrationText": {
        "description": "Introductory text for registration."
    },
    "haveAccount": "Have an acount?",
    "@haveAccount": {
        "description": "Asking the user if he have an account."
    },
    "loginHere": "Login here!",
    "@loginHere": {
        "description": "Text that redirects the user to the login page."
    },
    "notLogged": "Not logged user",
    "@notLogged": {
        "description": "Indicator if the user is logged or not."
    },
    "signOut": "Sign out",
    "@signOut": {
        "description": "Text of the button to sign out."
    },
    "loggedUser": "Logged user: {userEmail}",
    "@loggedUser": {
        "description": "Information about logged user email.",
        "placeholders": {
            "userEmail": {
                "type": "String?",
                "example": "test@gmail.com"
            }
        }
    },
    "newNode": "Create new note/directory",
    "@newNode": {
        "description": "Title of the creating new node alert dialog."
    },
    "deleteNode": "Delete {nodeName}",
    "@deleteNode": {
        "description": "Title of the deleting node alert dialog.",
        "placeholders": {
            "nodeName": {
                "type": "String",
                "example": "My note"
            }
        }
    },
    "renameNode": "Rename {nodeName}",
    "@renameNode": {
        "description": "Title of the renaming the node alert dialog.",
        "placeholders": {
            "nodeName": {
                "type": "String",
                "example": "My note"
            }
        }
    },
    "cancel": "CANCEL",
    "@cancel": {
        "description": "Text content of the cancel button to the cancel the decision."
    },
    "create": "CREATE",
    "@create": {
        "description": "Text content of the create button which leads to the creating new object."
    },
    "delete": "DELETE",
    "@delete": {
        "description": "Text content of the delete button which leads to the deleting objects."
    },
    "rename": "RENAME",
    "@rename": {
        "description": "Text content of the rename button which leads to the remaning the objects."
    },
    "deleteContent": "Are you sure to delete {nodeName} node?",
    "@deleteContent": {
        "description": "The question to the user, if he want to delete the node.",
        "placeholders": {
            "nodeName": {
                "type": "String",
                "example": "My note"               
            }
        }
    },
    "menuDelete": "Delete",
    "@menuDelete": {
        "description": "A text in the menu when user wants to delete the node."
    },
    "menuRename": "Rename",
    "@menuRename": {
        "description": "A text in the menu when user wants to rename the node."
    },
    "menuCreate": "Create children",
    "@menuCreate": {
        "description": "A text in the menu when user wants to add children to the node."
    },
    "networkRequestFailed": "No internet connection",
    "@networkRequestFailed": {
        "description": "Inform user that register or login failed because of internet connection."
    },
    "invalidEmail": "Wrong format of email",
    "@invalidEmail": {
        "description": "When user inputs the wrong format of email, for example missing @ or ."
    },
    "wrongPassword": "Wrong password",
    "@wrongPassword": {
        "description": "When user inputs wrong password."
    },
    "userNotFound": "No user found with that email",
    "@userNotFound": {
        "description": "When user inputs an email that do not exists in the database."
    },
    "invalidCreditial": "Wrong email or password",
    "@invalidCreditial": {
        "description": "When the email or password is wrong."
    },
    "weakPassword": "Password is too short. Password must have at least 6 chars.",
    "@weakPassword": {
        "description": "When the password have less than 6 chars"
    },
    "accountWithEmailExists": "An account already exists for that email.",
    "@accountWithEmailExists": {
        "description": "When the user enters email for what already exists account."
    },
    "differentPasswords": "Passwords are not same.",
    "@differentPasswords": {
        "description": "When the passwords in the textfields does not match."
    }

}